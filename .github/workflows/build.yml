name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform-reqs:
          - use-platform-reqs
          - ignore-platform-reqs
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
        dependencies:
          - lowest
          - highest
        exclude:
          - platform-reqs: ignore-platform-reqs
            php-version: "8.0"

    steps:
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 10

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependencies }}

      - name: Install lowest dependencies
        if: ${{ matrix.dependencies == 'lowest' && matrix.platform-reqs == 'use-platform-reqs' }}
        run: composer update --no-interaction --prefer-dist --prefer-lowest

      - name: Install lowest dependencies (ignore platform reqs)
        if: ${{ matrix.dependencies == 'lowest' && matrix.platform-reqs == 'ignore-platform-reqs' }}
        run: composer update --no-interaction --prefer-dist --prefer-lowest --ignore-platform-reqs

      - name: Install highest dependencies
        if: ${{ matrix.dependencies == 'highest' && matrix.platform-reqs == 'use-platform-reqs' }}
        run: composer update --no-interaction --prefer-dist

      - name: Install highest dependencies (ignore platform reqs)
        if: ${{ matrix.dependencies == 'highest' && matrix.platform-reqs == 'ignore-platform-reqs' }}
        run: composer update --no-interaction --prefer-dist --ignore-platform-reqs

      - name: Run tests
        run: composer test

      - name: Run infection
        run: composer infection
        env:
          INFECTION_DASHBOARD_API_KEY: ${{ secrets.INFECTION_DASHBOARD_API_KEY }}

      - name: Upload coverage to Codecov.io
        run: bash <(curl -s https://codecov.io/bash -s "build/logs")
        continue-on-error: true

      - name: Upload coverage to Scrutinizer
        uses: sudo-bot/action-scrutinizer@latest
        with:
          cli-args: --format=php-clover build/logs/clover.xml
        continue-on-error: true
